li $a0 0
push $a0

li $a0 0
push $a0

li $a0 0
push $a0

push 0
mv $sp $fp //Load new $fp
li $a0 1

mv $fp $al
addi $al $al1
sw $a0 0($al) // 0($al) = $a0 a=exp

mv $fp $al //put in $al actual fp
//Value loading
lw $a0 1($al) //put in $a0 value of Id a

mv $fp $al
addi $al $al2
sw $a0 0($al) // 0($al) = $a0 c=exp


push $fp
li $a0 0
push $a0
push $a0
mv $fp $al //put in $al actual fp
addi $a0 $al 3 //put in $a0 value of Id s
push $a0
push 0
mv $fp $al //put in $al actual fp
push $al
jal  Function0// jump to start of function and put in $ra next instruction

mv $fp $al
addi $al $al3
sw $a0 0($al) // 0($al) = $a0 s=exp

mv $fp $al //put in $al actual fp
//Value loading
lw $a0 3($al) //put in $a0 value of Id s

print $a0

halt
//Creating function:
//BEGIN FUNCTION Function0
Function0:
mv $sp $fp
push $ra
li $a0 2

mv $fp $al
addi $al $al3
sw $a0 0($al) // 0($al) = $a0 b=exp

mv $fp $al //put in $al actual fp
//Value loading
lw $a0 3($al) //put in $a0 value of Id b

mv $fp $al
addi $al $al2
sw $a0 0($al) // 0($al) = $a0 x=exp

mv $fp $al //put in $al actual fp
//Value loading
lw $a0 2($al) //put in $a0 value of Id x

b endFunction0


endFunction0:
subi $sp $fp 1
lw $fp 0($fp)
lw $ra 0($sp)
addi $sp $sp 4//pop declaration 1
pop
lw $fp 0($sp)
pop
jr $ra
// END OF f

//Ending function.
